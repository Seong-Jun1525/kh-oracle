-- KH_연습문제
-- 1. 2025년 12월 25일의 요일 조회
SELECT TO_CHAR(TO_DATE('251225'), 'DAY') AS "2025년 12월 25일의 요일" FROM DUAL;

-- 2. 70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과, 주민번호, 부서명, 직급 조회
SELECT EMP_NAME AS "사원 명", EMP_NO AS "주민번호", DEPT_TITLE AS "부서 명", JOB_CODE AS "직급"
FROM EMPLOYEE
	JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
	JOIN JOB USING(JOB_CODE)
WHERE TO_DATE(SUBSTR(EMP_NO, 1, 2), 'RR') BETWEEN TO_DATE('1970', 'YYYY') AND TO_DATE('1979', 'YYYY')
        AND SUBSTR(EMP_NO, 8, 1) = 2 AND EMP_NAME LIKE '전%';
      
-- 3. 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회
--SELECT EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO, 1, 2), 'RR')) AS "나이"
--FROM EMPLOYEE
--ORDER BY 나이;
SELECT
	EMP_ID AS "사원 코드",
	EMP_NAME AS "사원 명",
	EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO, 1, 2), 'RR')) AS "나이",
	DEPT_TITLE AS "부서 명",
	JOB_NAME AS "직급 명"
FROM EMPLOYEE
	JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
	JOIN JOB USING (JOB_CODE)
WHERE EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO, 1, 2), 'RR')) = (
	SELECT MIN(EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO, 1, 2), 'RR')))
	FROM EMPLOYEE
);

-- 4. 이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 조회
SELECT EMP_ID AS "사원 코드", EMP_NAME AS "사원 명", JOB_CODE AS "직급"
FROM EMPLOYEE
	JOIN JOB USING (JOB_CODE)
WHERE EMP_NAME LIKE '%형%';
 
-- 5. 부서 코드가 D5이거나 D6인 사원의 사원 명, 직급, 부서 코드, 부서 명 조회
SELECT EMP_NAME AS "사원 명", JOB_CODE AS "직급", DEPT_CODE AS "부서 코드", DEPT_TITLE AS "부서 명"
FROM EMPLOYEE
	JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
	JOIN JOB USING (JOB_CODE)
WHERE DEPT_CODE IN ('D5', 'D6');
 
-- 6. 보너스를 받는 사원의 사원 명, 보너스, 부서 명, 지역 명 조회
SELECT EMP_NAME AS "사원명", BONUS AS "보너스", DEPT_TITLE AS "부서 명", LOCAL_NAME AS "지역 명"
FROM EMPLOYEE
	JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
	JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE BONUS IS NOT NULL;

-- 7. 사원 명, 직급, 부서 명, 지역 명 조회
SELECT EMP_NAME AS "사원 명", JOB_CODE AS "직급", DEPT_TITLE AS "부서 명", LOCAL_NAME AS "지역 명"
FROM EMPLOYEE
	JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
	JOIN LOCATION ON LOCATION_ID = LOCAL_CODE;
 
-- 8. 한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회 
SELECT EMP_NAME AS "사원 명", DEPT_TITLE AS "부서 명", LOCAL_NAME AS "지역 명", NATIONAL_NAME AS "국가 명"
FROM EMPLOYEE
	JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
	JOIN LOCATION ON LOCATION_ID = LOCAL_CODE
	JOIN NATIONAL USING (NATIONAL_CODE)
WHERE NATIONAL_NAME IN ('한국', '일본');

-- 9. 한 사원과 같은 부서에서 일하는 사원의 이름 조회
SELECT EE.EMP_NAME AS "사원 명", E.DEPT_CODE AS "부서 코드", E.EMP_NAME AS "사원 명"
FROM EMPLOYEE E
	JOIN EMPLOYEE EE ON (E.DEPT_CODE = EE.DEPT_CODE)
WHERE E.EMP_NAME != EE.EMP_NAME
ORDER BY EE.EMP_NAME;
 
-- 10. 보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급, 급여 조회 (NVL 이용)
SELECT EMP_NAME AS "사원 명", JOB_CODE AS "직급", TO_CHAR(SALARY, 'L999,999,999') AS "급여"
FROM EMPLOYEE
WHERE BONUS IS NULL AND JOB_CODE IN ('J4', 'J7');

SELECT EMP_NAME AS "사원 명", JOB_CODE AS "직급", TO_CHAR(SALARY, 'L999,999,999') AS "급여"
FROM EMPLOYEE
WHERE (0, JOB_CODE) IN (
	SELECT NVL(BONUS, 0), JOB_CODE
	FROM EMPLOYEE
	WHERE JOB_CODE IN ('J4', 'J7')
);
 
-- 11. 퇴사 하지 않은 사람과 퇴사한 사람의 수 조회
SELECT COUNT(*) AS "퇴사 하지 않은 사람", (
	SELECT COUNT(*)
	FROM EMPLOYEE
	WHERE ENT_YN = 'Y'
	GROUP BY ENT_YN
) AS "퇴사한 사람의 수"
FROM EMPLOYEE
WHERE ENT_YN = 'N'
GROUP BY ENT_YN;
 
-- 12. 보너스 포함한 연봉이 높은 5명의 사번, 이름, 부서 명, 직급, 입사일, 순위 조회
SELECT EMP_ID AS "사번", EMP_NAME AS "사원 명", DEPT_TITLE AS "부서 명", JOB_CODE AS "직급", HIRE_DATE AS "입사일", ROWNUM AS "순위"
FROM (
	SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_CODE, HIRE_DATE
	FROM EMPLOYEE
		JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
	ORDER BY (SALARY + (NVL(BONUS, 0) * SALARY)) * 12 DESC
)
WHERE ROWNUM <= 5;
 
-- 13. 부서 별 급여 합계가 전체 급여 총 합의 20%보다 많은 부서의 부서 명, 부서 별 급여 합계 조회
--	13-1. JOIN과 HAVING 사용
SELECT DEPT_TITLE AS "부서 명", TO_CHAR(SUM(SALARY), 'L999,999,999') AS "부서 별 급여 합계"
FROM DEPARTMENT
	JOIN EMPLOYEE ON (DEPT_ID = DEPT_CODE)
GROUP BY DEPT_TITLE
HAVING SUM(SALARY) > (
	SELECT SUM(SALARY)
	FROM EMPLOYEE
) * 0.2;
                      
--	13-2. 인라인 뷰 사용
SELECT DEPT_TITLE AS "부서 명", "부서 별 급여 합계"
FROM (
	SELECT DEPT_TITLE, TO_CHAR(SUM(SALARY), 'L999,999,999') AS "부서 별 급여 합계"
	FROM DEPARTMENT
		JOIN EMPLOYEE ON (DEPT_ID = DEPT_CODE)
	GROUP BY DEPT_TITLE
	HAVING SUM(SALARY) > (
		SELECT SUM(SALARY)
		FROM EMPLOYEE
	) * 0.2
);
              
--	13-3. WITH 사용
WITH EMP_W1 AS (
	SELECT DEPT_TITLE, TO_CHAR(SUM(SALARY), 'L999,999,999') AS "부서 별 급여 합계"
	FROM DEPARTMENT
		JOIN EMPLOYEE ON (DEPT_ID = DEPT_CODE)
	GROUP BY DEPT_TITLE
	HAVING SUM(SALARY) > (
		SELECT SUM(SALARY)
		FROM EMPLOYEE
	) * 0.2
)

SELECT DEPT_TITLE AS "부서 명", "부서 별 급여 합계"
FROM EMP_W1;

-- 14. 부서 명과 부서 별 급여 합계 조회
SELECT DEPT_TITLE AS "부서 명", TO_CHAR(SUM(SALARY), 'L999,999,999') AS "부서 별 급여 합계"
FROM DEPARTMENT
	JOIN EMPLOYEE ON DEPT_ID = DEPT_CODE
GROUP BY DEPT_TITLE;