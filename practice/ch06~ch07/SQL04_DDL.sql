/*
	DDL 실습
*/
--DROP TABLE TB_CATEGORY;
--DROP TABLE TB_CLASS_TYPE;
-- [1]
CREATE TABLE TB_CATEGORY (
	NAME VARCHAR2(10),
	USE_YN CHAR(1) DEFAULT 'Y'
);

-- [2]
CREATE TABLE TB_CLASS_TYPE (
	NO VARCHAR2(5) PRIMARY KEY,
	NAME VARCHAR2(10)
);

-- [3]
ALTER TABLE TB_CATEGORY ADD PRIMARY KEY (NAME); -- ALTER TABLE TB_CATEGORY ADD CONSTRAINT PRIMARY KEY (NAME);

-- [4]
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

-- [5]
ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10);
ALTER TABLE TB_CLASS_TYPE MODIFY NAME VARCHAR2(20);

-- [6]
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;

-- [7]
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT PK_CATEGORY_NAME TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT SYS_C008476 TO PK_CATEGORY_NAME;

--ALTER TABLE TB_CATEGORY DROP CONSTRAINT SYS_C008477;
--ALTER TABLE TB_CATEGORY ADD CONSTRAINT PK_CATEGORY_NAME PRIMARY KEY  (CATEGORY_NAME);
--
--ALTER TABLE TB_CLASS_TYPE DROP CONSTRAINT SYS_C008476;
--ALTER TABLE TB_CLASS_TYPE ADD CONSTRAINT PK_TB_CLASS_TYPE_NO PRIMARY KEY  (CLASS_TYPE_NO);

-- [8]
INSERT INTO TB_CATEGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회', 'Y');
COMMIT;

-- [9]
ALTER TABLE TB_DEPARTMENT ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY)  REFERENCES TB_CATEGORY  (CATEGORY_NAME);

-- [10]
GRANT CREATE VIEW TO WORKBOOK; -- 뷰를 생성하기 위한 권한 부여(관리자 계정으로 실행!!!!)

CREATE VIEW VW_학생일반정보 (학번, 학생이름, 주소) AS (
	SELECT 
		STUDENT_NO,
		STUDENT_NAME,
		STUDENT_ADDRESS
	FROM TB_STUDENT	
);
SELECT * FROM VW_학생일반정보;

-- [11]
SELECT
	STUDENT_NAME,
	DEPARTMENT_NAME,
	NVL(PROFESSOR_NAME, '지도교수없음')
FROM TB_STUDENT
	LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
	LEFT JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO = PROFESSOR_NO
ORDER BY DEPARTMENT_NAME;
--DROP VIEW VW_지도면담;
CREATE VIEW VW_지도면담 (학생이름, 학과이름, 지도교수이름) 
AS 
	SELECT
		STUDENT_NAME,
		DEPARTMENT_NAME,
		NVL(PROFESSOR_NAME, '지도교수없음')
	FROM TB_STUDENT
		LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
		LEFT JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO = PROFESSOR_NO
	ORDER BY DEPARTMENT_NAME
;

--CREATE VIEW VW_지도면담 (학생이름, 학과이름, 지도교수이름) 
--AS (
--	SELECT
--		STUDENT_NAME,
--		DEPARTMENT_NAME,
--		PROFESSOR_NAME
--	FROM TB_STUDENT
--		JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
--		LEFT JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO = PROFESSOR_NO
--	ORDER BY DEPARTMENT_NAME
--);
SELECT * FROM VW_지도면담;

-- [12]
--SELECT DEPARTMENT_NAME, COUNT(*)
--FROM TB_DEPARTMENT
--	JOIN TB_STUDENT USING (DEPARTMENT_NO)
--GROUP BY DEPARTMENT_NAME;

CREATE VIEW VW_학과별학생수 AS (
	SELECT DEPARTMENT_NAME, COUNT(*) AS STUDENT_COUNT
	FROM TB_DEPARTMENT
		JOIN TB_STUDENT USING (DEPARTMENT_NO)
	GROUP BY DEPARTMENT_NAME
);
SELECT * FROM VW_학과별학생수;

-- [13]
SELECT * FROM VW_학생일반정보
WHERE 학번 = 'A213046';

UPDATE VW_학생일반정보
	SET 학생이름 = '임성준'
WHERE 학번 = 'A213046';
--ROLLBACK;

-- [14]
-- VIEW를 생성할 때 옵션 중에 WITH READ ONLY 옵션을 줘서 읽기만 가능하게 만들어야 한다

-- [15]
-- 2005 ~ 2009
SELECT *
FROM (
	SELECT CLASS_NO AS "과목번호", CLASS_NAME AS "과목이름", COUNT(*) AS "누적수강생수(명)"
	FROM TB_CLASS
		JOIN TB_GRADE USING (CLASS_NO)
	WHERE TO_DATE(TERM_NO, 'YYYYMM') BETWEEN TO_DATE('200501', 'YYYYMM') AND TO_DATE('200912', 'YYYYMM') 
	GROUP BY CLASS_NO, CLASS_NAME
	ORDER BY 3 DESC
)
WHERE ROWNUM <= 3;